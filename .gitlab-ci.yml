stages:
  - build
  - test
  - scan

build:
  stage: build
  image: ubuntu:latest
  cache:
    key: conan-cache
    paths:
      - .conan2/data
      - .conan2/p
  script:
    - apt-get update
    - apt-get install -y cmake g++ python3-pip python3-venv
    - python3 -m venv venv
    - . venv/bin/activate

    # Install Conan 2.x
    - pip install "conan>=2.0"

    # Detect profile (ensures compiler/os/build_type/etc. are set)
    - conan profile detect --force

    # Lock dependencies
    - conan lock create . --lockfile=conan.lock --profile=default

    # Install dependencies and generate toolchain using lockfile
    - conan install . --lockfile=conan.lock --output-folder=build --build=missing

    # Configure and build with CMake using Conan-generated toolchain
    - cd build
    - cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
    - cmake --build .
  artifacts:
    paths:
      - build/LogFileAnalyzer
    expire_in: 1 week
  only:
    - main

sonarqube:
  stage: test
  image: sonarsource/sonar-scanner-cli:5
  script:
    - sonar-scanner \
        -Dsonar.projectKey=LogAnalyzer \
        -Dsonar.sources=. \
        -Dsonar.exclusions=build/** \
        -Dsonar.language=cpp \
        -Dsonar.host.url=http://sonarqube.khangesh.store/ \
        -Dsonar.token=${SONAR_TOKEN}
  only:
    - main

sca-ort:
  stage: scan
  image: eclipse-temurin:17
  before_script:
    - apt-get update && apt-get install -y curl unzip
  script:
    - echo "üì• Downloading OSS Review Toolkit CLI..."
    - curl -L -o ort-cli.jar https://github.com/oss-review-toolkit/ort/releases/latest/download/ort-cli.jar

    - echo "üîç Analyzing dependencies using ORT..."
    - java -jar ort-cli.jar analyze -f Conan -i . -o ort-output

    - echo "üìÑ Generating ORT reports..."
    - java -jar ort-cli.jar report -i ort-output/analyzer-result.yml -o ort-report -f StaticHtml

    - echo "üìÅ Report contents:"
    - ls -lh ort-report
  artifacts:
    paths:
      - ort-report
    when: always
    expire_in: 1 week
  only:
    - main
